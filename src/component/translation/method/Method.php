<?php


namespace NovemBit\i18n\component\translation\method;

/*
 * Translation method class
 * Any method of translation must extends this class
 * */

use Exception;
use NovemBit\i18n\component\translation\models\TranslationNode;
use NovemBit\i18n\component\translation\Translation;

/**
 * @property  \NovemBit\i18n\component\Translation context
 */
abstract class Method extends Translation
{
    public $type = 0;

    public function validateBeforeTranslate(&$text)
    {

        $this->clarifyText($text);
        return parent::validateBeforeTranslate($text); // TODO: Change the autogenerated stub
    }

    public function validateAfterTranslate($before, $after, &$translates)
    {

        preg_match('/(^\s+|^).*?(\s+$|$)/',$before,$matches);

        $prefix = isset($matches[1]) ? $matches[1] : '';
        $suffix = isset($matches[2]) ? $matches[2] : '';

        foreach ($translates[$before] as &$node) {
            $node = $prefix.$node.$suffix;
        }

        return parent::validateAfterTranslate($before, $after, $translates); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $string
     *
     */
    private function clarifyText(string & $string)
    {

        /*
         * Whitespace
         * */
//        $string = preg_replace('/\s+/', ' ', $string);

        /*
         * First and last spaces
         * */
        $string = trim($string, ' ');

    }

}